JSB.newAddon=function(e){return JSB.require("mnutils"),JSB.require("CryptoJS"),JSB.require("marked"),JSB.require("highlight"),JSB.require("mustache"),JSB.defineClass("MNSubscription : JSExtension",{sceneWillConnect:async function(){try{self.appInstance=Application.sharedInstance(),subscriptionUtils.init(e),subscriptionConfig.init(),self.isNewWindow=!1,self.watchMode=!1,self.textSelected="",self.textProcessed=!1,self.dateGetText=Date.now(),self.dateNow=Date.now(),self.rect="{{0, 0}, {10, 10}}",self.arrow=1,self.isFirst=!0,MNUtil.addObserver(self,"onPopupMenuOnNote:","PopupMenuOnNote"),MNUtil.addObserver(self,"onPopupMenuOnSelection:","PopupMenuOnSelection"),MNUtil.addObserver(self,"onClosePopupMenuOnNote:","ClosePopupMenuOnNote"),MNUtil.addObserver(self,"onClosePopupMenuOnSelection:","ClosePopupMenuOnSelection")}catch(e){subscriptionUtils.showHUD("Error in sceneWillConnect: "+e)}},sceneDidDisconnect:async function(){MNUtil.removeObserver(self,"PopupMenuOnNote"),MNUtil.removeObserver(self,"PopupMenuOnSelection"),MNUtil.removeObserver(self,"ClosePopupMenuOnNote"),MNUtil.removeObserver(self,"ClosePopupMenuOnSelection")},onPopupMenuOnNote:async function(e){var t;self.window===MNUtil.currentWindow&&(e=e.userInfo.note.noteId,t=Date.now(),MNUtil.popUpNoteInfo={time:t,noteId:e})},onClosePopupMenuOnNote:async function(e){self.window===MNUtil.currentWindow&&MNUtil.popUpNoteInfo&&e.userInfo.noteid===MNUtil.popUpNoteInfo.noteId&&(MNUtil.popUpNoteInfo=void 0)},onPopupMenuOnSelection:function(e){var t;self.window===MNUtil.currentWindow&&(t=Date.now(),e=e.userInfo.documentController,MNUtil.popUpSelectionInfo={time:t,docController:e})},onClosePopupMenuOnSelection:async function(e){self.window===MNUtil.currentWindow&&(await MNUtil.delay(.01),MNUtil.popUpSelectionInfo)&&e.userInfo.documentController===MNUtil.popUpSelectionInfo.docController&&!e.userInfo.documentController.imageFromSelection()&&(MNUtil.popUpSelectionInfo=void 0)},sceneWillResignActive:function(){},sceneDidBecomeActive:function(){},notebookWillOpen:async function(e){try{subscriptionUtils.checkSubscriptionController(),subscriptionUtils.studyController().studyMode<3?(subscriptionUtils.refreshAddonCommands(),subscriptionUtils.subscriptionController.view.hidden=!0,subscriptionUtils.subscriptionController.notebookid=e,self.notebookid=e,subscriptionUtils.subscriptionController.view.frame={x:50,y:100,width:270,height:290},subscriptionUtils.subscriptionController.currentFrame={x:50,y:100,width:270,height:290},NSTimer.scheduledTimerWithTimeInterval(.2,!1,function(){MNUtil.studyView.becomeFirstResponder()})):subscriptionUtils.subscriptionController&&(subscriptionUtils.subscriptionController.view.hidden=!0),subscriptionConfig.autoSubscribe()}catch(e){subscriptionUtils.showHUD("Error in notebookWillOpen: "+e)}},notebookWillClose:function(e){},documentDidOpen:function(e){},documentWillClose:function(e){},controllerWillLayoutSubviews:function(e){var t;e!==subscriptionUtils.studyController()||(3===subscriptionUtils.studyController().studyMode&&subscriptionUtils.subscriptionController&&(subscriptionUtils.subscriptionController.view.hidden=!0),subscriptionUtils.subscriptionController.view.hidden)||(e=subscriptionUtils.studyView().bounds,(t=subscriptionUtils.subscriptionController.currentFrame).x+.5*t.width>=e.width&&(t.x=e.width-.5*t.width),t.y>=e.height&&(t.y=e.height-20),subscriptionUtils.subscriptionController.view.frame=t,subscriptionUtils.subscriptionController.currentFrame=t)},queryAddonCommandStatus:function(){return MNUtil.studyMode<3?{image:"logo.png",object:self,selector:"toggleAddon:",checked:subscriptionConfig.isSubscribed()}:(subscriptionUtils.subscriptionController&&(subscriptionUtils.subscriptionController.view.hidden=!0),null)},toggleAddon:async function(e){try{var t;subscriptionUtils.ensureView(subscriptionUtils.subscriptionController.view),self.addonBar||(self.addonBar=e.superview.superview,subscriptionUtils.addonBar=self.addonBar),self.isFirst&&(0===(t=self.addonBar.frame).x?subscriptionUtils.subscriptionController.view.frame={x:40,y:t.y,width:270,height:290}:subscriptionUtils.subscriptionController.view.frame={x:t.x-270,y:t.y,width:270,height:290},subscriptionUtils.subscriptionController.currentFrame=subscriptionUtils.subscriptionController.view.frame,self.isFirst=!1),subscriptionUtils.subscriptionController.view.hidden?subscriptionUtils.subscriptionController.show(self.addonBar.frame):subscriptionUtils.subscriptionController.hide(self.addonBar.frame)}catch(e){subscriptionUtils.showHUD(e)}}},{addonDidConnect:function(){},addonWillDisconnect:function(){},applicationWillEnterForeground:async function(){await MNUtil.delay(.01),subscriptionConfig.autoSubscribe(!1)},applicationDidEnterBackground:function(){},applicationDidReceiveLocalNotification:function(e){}})};const getSubscriptionController=()=>self;var subscriptionController=JSB.defineClass("subscriptionController : UIViewController <UIWebViewDelegate>",{viewDidLoad:function(){try{self.appInstance=Application.sharedInstance(),self.homeImage=subscriptionUtils.getImage(subscriptionUtils.mainPath+"/home.png",2),self.homeImage=subscriptionUtils.getImage(subscriptionUtils.mainPath+"/home.png",2),self.bothModeImage=subscriptionUtils.getImage(subscriptionUtils.mainPath+"/bothMode.png",2),self.goforwardImage=subscriptionUtils.getImage(subscriptionUtils.mainPath+"/goforward.png",2),self.screenImage=subscriptionUtils.getImage(subscriptionUtils.mainPath+"/screen.png",2),self.snipasteImage=subscriptionUtils.getImage(subscriptionUtils.mainPath+"/snipaste.png",2),self.closeImage=subscriptionUtils.getImage(subscriptionUtils.mainPath+"/stop.png",2),self.custom=!1,self.customMode="None",self.dynamic=!0,self.miniMode=!1,self.isLoading=!1,self.lastFrame=self.view.frame,self.currentFrame=self.view.frame,self.mode=0,self.moveDate=Date.now(),self.view.layer.shadowOffset={width:0,height:0},self.view.layer.shadowRadius=15,self.view.layer.shadowOpacity=.5,self.view.layer.shadowColor=UIColor.colorWithWhiteAlpha(.5,1),self.view.layer.opacity=1,self.view.layer.cornerRadius=15,self.view.backgroundColor=UIColor.whiteColor().colorWithAlphaComponent(0),self.highlightColor=UIColor.blendedColor(UIColor.colorWithHexString("#2c4d81").colorWithAlphaComponent(.8),Application.sharedInstance().defaultTextColor,.8),self.moveButton=MNButton.new({title:"Subscription Manager",bold:!0,font:16,radius:8,color:"#457bd3",alpha:.8},self.view),self.moveButton.addTargetActionForControlEvents(self,"changeView:",64),self.closeButton=MNButton.new({image:subscriptionUtils.mainPath+"/stop.png",radius:8,color:"#e06c75",alpha:.8},self.view),self.closeButton.addTargetActionForControlEvents(self,"closeButtonTapped:",64),self.refreshButton=MNButton.new({image:subscriptionUtils.mainPath+"/reload.png",radius:8,color:"#457bd3",alpha:.8},self.view),self.refreshButton.addTargetActionForControlEvents(self,"refreshButtonTapped:",64),self.subscriptionView=UIView.new(),self.subscriptionView.backgroundColor=UIColor.whiteColor().colorWithAlphaComponent(.8),self.subscriptionView.layer.cornerRadius=13,self.subscriptionView.hidden=!1,self.view.addSubview(self.subscriptionView),self.webview=new UIWebView(self.view.bounds),self.webview.backgroundColor=UIColor.whiteColor(),self.webview.scalesPageToFit=!0,self.webview.autoresizingMask=18,((self.webview.delegate=self).webview.scrollView.delegate=self).webview.scrollView.bounces=!1,self.webview.layer.cornerRadius=15,self.webview.layer.masksToBounds=!0,self.webview.layer.borderColor=MNUtil.hexColorAlpha("#9bb2d6",.8),self.webview.layer.borderWidth=0,self.webview.sidebar=!0,self.docview=new UIWebView(self.view.bounds),self.docview.backgroundColor=UIColor.whiteColor(),self.docview.scalesPageToFit=!0,self.docview.autoresizingMask=18,((self.docview.delegate=self).docview.scrollView.delegate=self).docview.scrollView.bounces=!1,self.docview.layer.cornerRadius=15,self.docview.layer.masksToBounds=!0,self.docview.layer.borderColor=MNUtil.hexColorAlpha("#9bb2d6",.8),self.docview.layer.borderWidth=0,self.docview.sidebar=!1,self.docview.customUserAgent="Mozilla/5.0 (iPhone; CPU iPhone OS 15_0 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148",self.highlightColor=UIColor.blendedColor(MNUtil.hexColorAlpha("#2c4d81",.8),self.appInstance.defaultTextColor,.8),self.webview.hidden=!0,self.docview.hidden=!0,self.webview.lastOffset=0,self.view.addSubview(self.webview),self.view.addSubview(self.docview),self.webview.loadFileURLAllowingReadAccessToURL(NSURL.fileURLWithPath(subscriptionUtils.mainPath+"/sidebar.html"),NSURL.fileURLWithPath(subscriptionUtils.mainPath+"/")),self.activationStatus=MNButton.new({title:subscriptionConfig.getStatus(),bold:!0,font:14,radius:10,color:"#457bd3",alpha:.8},self.subscriptionView),self.activationStatus.addTargetActionForControlEvents(self,"activate:",64);var e=subscriptionConfig.getConfig("autoSubscription");switch(self.autoSubscription=MNButton.new({title:e?"Auto subscription: ✅":"Auto subscription: ❌",bold:!0,font:14,radius:10,color:"#457bd3",alpha:.8},self.subscriptionView),self.autoSubscription.addTargetActionForControlEvents(self,"toggleAutoSubscription:",64),self.freeUsage=MNButton.new({title:subscriptionConfig.getFreeUsage(),bold:!0,font:14,radius:10,color:"#457bd3",alpha:.8},self.subscriptionView),self.usageButton=MNButton.new({title:"Refresh Usage",bold:!0,font:14,radius:10,color:"#457bd3",alpha:.8},self.subscriptionView),self.usageButton.addTargetActionForControlEvents(self,"refreshUsage:",64),self.usageDetailButton=MNButton.new({title:"Detail",bold:!0,font:14,radius:10,color:"#457bd3",alpha:.8},self.subscriptionView),self.usageDetailButton.addTargetActionForControlEvents(self,"showDetail:",64),self.apikeyInput=self.creatTextView("subscriptionView",void 0,.75),self.apikeyInput.text="",self.pasteKeyButton=MNButton.new({title:"Paste",bold:!0,font:14,radius:8,color:"#e06c75",opacity:.8},self.subscriptionView),self.pasteKeyButton.addTargetActionForControlEvents(self,"pasteApiKey:",64),self.showAPIKeyButton=MNButton.new({image:subscriptionUtils.mainPath+"/vision.png",radius:8,color:"#a2a2a2",opacity:.8},self.subscriptionView),self.showAPIKeyButton.addTargetActionForControlEvents(self,"toggleApikey:",64),self.resizeButton=MNButton.new({image:subscriptionUtils.mainPath+"/curve.png",radius:10,color:"#e06c75",alpha:0},self.view),self.DMButton=MNButton.new({title:"Show APIKey in DM",bold:!0,font:14,radius:10,color:"#e06c75",opacity:.8},self.subscriptionView),self.DMButton.url="https://afdian.com/message/929697869e9311eea6745254001e7c00",self.DMButton.addTargetActionForControlEvents(self,"openURL:",64),self.buy5dollerButton=MNButton.new({title:"APIKey for 5$",bold:!0,font:14,radius:10,color:"#9bb2d6"},self.subscriptionView),self.buy5dollerButton.url="https://ifdian.net/order/create?product_type=1&plan_id=a6ed8b60fbcf11ee941152540025c377&sku=%5B%7B%22sku_id%22:%22b24e214cfd3f11eebc335254001e7c00%22,%22count%22:1%7D%5D",self.buy5dollerButton.addTargetActionForControlEvents(self,"openURL:",64),self.buy10dollerButton=MNButton.new({title:"APIKey for 10$",bold:!0,font:14,radius:10,color:"#9bb2d6"},self.subscriptionView),self.buy10dollerButton.url="https://ifdian.net/order/create?product_type=1&plan_id=a6ed8b60fbcf11ee941152540025c377&sku=%5B%7B%22sku_id%22:%22a58e5502146f11efa4fa5254001e7c00%22,%22count%22:1%7D%5D",self.buy10dollerButton.addTargetActionForControlEvents(self,"openURL:",64),self.buy20dollerButton=MNButton.new({title:"APIKey for 20$",bold:!0,font:14,radius:10,color:"#9bb2d6"},self.subscriptionView),self.buy20dollerButton.url="https://ifdian.net/order/create?product_type=1&plan_id=a6ed8b60fbcf11ee941152540025c377&sku=%5B%7B%22sku_id%22:%2279e3e74a147011efb46e52540025c377%22,%22count%22:1%7D%5D",self.buy20dollerButton.addTargetActionForControlEvents(self,"openURL:",64),self.buy50dollerButton=MNButton.new({title:"APIKey for 50$",bold:!0,font:14,radius:10,color:"#9bb2d6"},self.subscriptionView),self.buy50dollerButton.url="https://ifdian.net/order/create?product_type=1&plan_id=a6ed8b60fbcf11ee941152540025c377&sku=%5B%7B%22sku_id%22%3A%22e87e8a7432f811efaa1552540025c377%22,%22count%22%3A1%7D%5D",self.buy50dollerButton.addTargetActionForControlEvents(self,"openURL:",64),self.URLButton=MNButton.new({title:"Switch URL",bold:!0,font:14,radius:10,color:"#457bd3",opacity:.8},self.subscriptionView),self.URLButton.addTargetActionForControlEvents(self,"changeURL:",64),self.color=["#ffffb4","#ccfdc4","#b4d1fb","#f3aebe","#ffff54","#75fb4c","#55bbf9","#ea3323","#ef8733","#377e47","#173dac","#be3223","#ffffff","#dadada","#b4b4b4","#bd9fdc"],self.resizeGesture0=new UIPanGestureRecognizer(self,"onResizeGesture0:"),self.closeButton.addGestureRecognizer(self.resizeGesture0),self.resizeGesture0.view.hidden=!1,self.resizeGesture=new UIPanGestureRecognizer(self,"onResizeGesture:"),self.resizeButton.addGestureRecognizer(self.resizeGesture),self.resizeGesture.view.hidden=!1,self.moveGesture=new UIPanGestureRecognizer(self,"onMoveGesture:"),self.moveButton.addGestureRecognizer(self.moveGesture),self.moveGesture.view.hidden=!1,subscriptionConfig.getConfig("lastView")){case"subscriptionView":self.subscriptionView.hidden=!1,self.webview.hidden=!0,MNButton.setTitle(self.moveButton,"Subscription Manager",void 0,!0),subscriptionConfig.config.lastView="subscriptionView";break;case"webview":self.subscriptionView.hidden=!0,self.webview.hidden=!1,MNButton.setTitle(self.moveButton,"Update Manager",void 0,!0),MNUtil.delay(.5).then(()=>{self.refreshSidebar()}),subscriptionConfig.config.lastView="webview"}subscriptionConfig.save()}catch(e){subscriptionUtils.showHUD("Error in viewDidLoad: "+e)}},viewWillAppear:function(e){},viewWillDisappear:function(e){},viewWillLayoutSubviews:function(){var e=self.view.bounds,t=(e.x,e.width),e=e.y+e.height,i=260;350<t?(self.subscriptionView.frame=MNUtil.genFrame(0,30,270,e-30),self.webview.frame=MNUtil.genFrame(0,30,270,e-30),self.docview.frame=MNUtil.genFrame(275,30,t-275,e-30),self.docview.hidden=!1):(i=t-10,self.subscriptionView.frame=MNUtil.genFrame(0,30,t,e-30),self.webview.frame=MNUtil.genFrame(0,30,t,e-30),self.docview.hidden=!0),self.closeButton.frame={x:t-30,y:0,width:25,height:25},self.moveButton.frame={x:35,y:0,width:t-70,height:25},self.refreshButton.frame={x:5,y:0,width:25,height:25},self.activationStatus.frame={x:5,y:90,width:i,height:30},self.showAPIKeyButton.frame={x:i-90,y:55,width:35,height:25},self.pasteKeyButton.frame={x:i-50,y:55,width:50,height:25},self.autoSubscription.frame={x:5,y:125,width:i-35,height:30},self.freeUsage.frame={x:i-25,y:125,width:30,height:30},self.usageButton.frame={x:5,y:160,width:i-70,height:30},self.usageDetailButton.frame={x:i-60,y:160,width:65,height:30},self.URLButton.frame={x:5,y:195,width:i,height:30},self.apikeyInput.frame={x:5,y:5,width:i,height:80},self.resizeButton.frame=MNUtil.genFrame(t-30,e-30,30,30),self.DMButton.hidden=e<295,self.buy5dollerButton.hidden=e<330,self.buy10dollerButton.hidden=e<365,self.buy20dollerButton.hidden=e<400,self.buy50dollerButton.hidden=e<435,self.DMButton.frame=MNUtil.genFrame(5,230,i,30),self.buy5dollerButton.frame=MNUtil.genFrame(5,265,i,30),self.buy10dollerButton.frame=MNUtil.genFrame(5,300,i,30),self.buy20dollerButton.frame=MNUtil.genFrame(5,335,i,30),self.buy50dollerButton.frame=MNUtil.genFrame(5,370,i,30)},webViewShouldStartLoadWithRequestNavigationType:function(e,t,i){var s=getSubscriptionController();let o=t.URL().absoluteString();if(/^https?\:\/\/.*\.mnaddon$/.test(o)){let s=MNUtil.getFileName(o);return MNUtil.confirm("Install mnaddon: "+s+"?","安装插件: "+s+"？").then(async e=>{var t,i;e&&(MNUtil.showHUD("Download: "+s),e=subscriptionUtils.mainPath+"/"+s,(await MNConnection.fetch(o)).writeToFileAtomically(e,!1),MNUtil.showHUD("Get addonid..."),ZipArchive.unzipFileAtPathToDestination(e,subscriptionUtils.mainPath+"/temp"),t=MNUtil.readJSON(subscriptionUtils.mainPath+"/temp/mnaddon.json"))&&"addonid"in t&&(i=subscriptionUtils.extensionPath+"/"+t.addonid,ZipArchive.unzipFileAtPathToDestination(e,i),MNUtil.showHUD(`Install mnaddon [${t.title}] success! Please restart MN manually`))}),!1}if(e.sidebar&&/^https?\:\/\//.test(o))return MNConnection.loadRequest(s.docview,o),!1;if(/^mnaddon\:\/\//.test(o)){var n=decodeURIComponent(o).split("action=")[1].split("?");let t={action:n[0]};for(let e=1;e<n.length;e++){var r=n[e].split("=");t[r[0]]=r[1]}return"install"===(t=subscriptionConfig.mnaddon.filter(e=>e.id===t.id)[0]).action||"update"===t.action?subscriptionNetwork.downloadFromConfig(t):"reinstall"===t.action&&MNUtil.confirm("Re-install this addon?","重新安装该插件？").then(async e=>{e&&subscriptionNetwork.downloadFromConfig(t)}),!1}return!0},scrollViewDidScroll:function(){},openURL:function(e){var t;self.docview.hidden&&((t=self.view.frame).width=650,self.view.frame=t,self.currentFrame=t,self.view.setNeedsLayout()),MNUtil.showHUD("Open url..."),MNConnection.loadRequest(self.docview,e.url)},changeURL:function(e){self.view.popoverController&&self.view.popoverController.dismissPopoverAnimated(!0);var t=subscriptionConfig.getConfig("url"),t=[{title:"URL1 (default)",object:self,selector:"changeURLTo:",param:"https://api.feliks.top",checked:"https://api.feliks.top"===t},{title:"URL2",object:self,selector:"changeURLTo:",param:"https://api1.feliks.top",checked:"https://api1.feliks.top"===t},{title:"URL3",object:self,selector:"changeURLTo:",param:"https://api2.feliks.top",checked:"https://api2.feliks.top"===t},{title:"URL4",object:self,selector:"changeURLTo:",param:"https://api.u1162561.nyat.app:20074",checked:"https://api.u1162561.nyat.app:20074"===t},{title:"URL5",object:self,selector:"changeURLTo:",param:"https://d2p9226849.vicp.fun",checked:"https://d2p9226849.vicp.fun"===t}];self.view.popoverController=MNUtil.getPopoverAndPresent(e,t,200,2)},changeURLTo:function(e){self.view.popoverController&&self.view.popoverController.dismissPopoverAnimated(!0),subscriptionConfig.config.url=e,subscriptionConfig.save()},changeView:function(e){self.view.popoverController&&self.view.popoverController.dismissPopoverAnimated(!0);var t=[{title:"Subscription Manager",object:self,selector:"setViewTo:",param:"subscriptionView"},{title:"Update Manager",object:self,selector:"setViewTo:",param:"webview"},{title:"MNAddon Panel",object:self,selector:"showPanel:",param:"webview"}];self.view.popoverController=MNUtil.getPopoverAndPresent(e,t,200,1)},setViewTo:async function(e){try{switch(self.view.popoverController&&self.view.popoverController.dismissPopoverAnimated(!0),e){case"subscriptionView":self.subscriptionView.hidden=!1,self.webview.hidden=!0,MNButton.setTitle(self.moveButton,"Subscription Manager",void 0,!0),subscriptionConfig.config.lastView="subscriptionView";break;case"webview":self.subscriptionView.hidden=!0,self.webview.hidden=!1,MNButton.setTitle(self.moveButton,"Update Manager",void 0,!0),self.refreshSidebar(),subscriptionConfig.config.lastView="webview"}subscriptionConfig.save(),self.view.setNeedsLayout()}catch(e){MNUtil.showHUD(e)}},showPanel:function(e){self.view.popoverController&&self.view.popoverController.dismissPopoverAnimated(!0),MNUtil.excuteCommand("OpenExtensions")},pasteApiKey:function(e){var t=MNUtil.clipboardText.trim();MNButton.setColor(self.showAPIKeyButton,"#e06c75"),self.apikeyInput.text=t,subscriptionUtils.showHUD("Save APIKey"),subscriptionConfig.save()},toggleApikey:function(e){var t;self.apikeyInput.text&&self.apikeyInput.text.trim()?(self.apikeyInput.text="",MNButton.setColor(self.showAPIKeyButton,"#a2a2a2")):subscriptionConfig.config.apikey.trim()?(t=subscriptionConfig.config.apikey.trim(),self.apikeyInput.text=t,MNButton.setColor(self.showAPIKeyButton,"#e06c75"),MNUtil.copy(t),MNUtil.showHUD("APIKey 已复制")):(MNButton.setColor(self.showAPIKeyButton,"#a2a2a2"),MNUtil.showHUD("No APIKey"))},refreshUsage:async function(e){var t=getSubscriptionController(),i=(subscriptionUtils.showHUD("Fetching usage"),await subscriptionNetwork.getUsage());"error"in i?t.usageButton.setTitleForState(i.error,0):t.usageButton.setTitleForState(`Usage: ${(i.usage/100).toFixed(2)} / `+i.total.toFixed(2),0)},showDetail:function(e){var t;self.docview.hidden&&((t=self.view.frame).width=650,self.view.frame=t,self.currentFrame=t,self.view.setNeedsLayout()),MNUtil.copy(subscriptionConfig.config.apikey),MNUtil.showHUD("APIKey 已复制"),self.docview.loadFileURLAllowingReadAccessToURL(NSURL.fileURLWithPath(subscriptionUtils.mainPath+"/usage.html"),NSURL.fileURLWithPath(subscriptionUtils.mainPath+"/"))},activate:async function(e){var t=self.apikeyInput.text.trim();t?subscriptionConfig.config.apikey=t:subscriptionConfig.config.apikey,subscriptionConfig.config.activated?!subscriptionConfig.isSubscribed()&&subscriptionConfig.config.subscriptionDaysRemain?(subscriptionConfig.config.activated=!0,subscriptionConfig.config.subscribedDay=subscriptionUtils.getToday(),subscriptionConfig.config.subscriptionDaysRemain=subscriptionConfig.config.subscriptionDaysRemain-1,subscriptionConfig.save(),subscriptionUtils.refreshAddonCommands(),self.activationStatus.setTitleForState(subscriptionConfig.getStatus(),0),subscriptionUtils.showHUD("Subscription days remian: "+subscriptionConfig.config.subscriptionDaysRemain)):(await subscriptionNetwork.subscribe()).success||(self.autoSubscription.setTitleForState(subscriptionConfig.config.autoSubscription?"Auto subscription: ✅":"Auto subscription: ❌",0),subscriptionConfig.save()):subscriptionConfig.config.subscriptionDaysRemain?(subscriptionConfig.config.activated=!0,subscriptionConfig.config.subscribedDay=subscriptionUtils.getToday(),subscriptionConfig.config.subscriptionDaysRemain=subscriptionConfig.config.subscriptionDaysRemain-1,subscriptionConfig.save(),subscriptionUtils.refreshAddonCommands(),self.activationStatus.setTitleForState(subscriptionConfig.getStatus(),0),subscriptionUtils.showHUD("Subscription days remian: "+subscriptionConfig.config.subscriptionDaysRemain)):subscriptionNetwork.subscribe()},toggleAutoSubscription:async function(e){try{var t=subscriptionConfig.getConfig("autoSubscription");subscriptionConfig.config.autoSubscription=!t,subscriptionConfig.save(),self.autoSubscription.setTitleForState(subscriptionConfig.config.autoSubscription?"Auto subscription: ✅":"Auto subscription: ❌",0)}catch(e){subscriptionUtils.showHUD(e)}},changeOpacity:function(e){self.view.popoverController&&self.view.popoverController.dismissPopoverAnimated(!0);var t=[{title:"100%",object:self,selector:"changeOpacityTo:",param:1},{title:"90%",object:self,selector:"changeOpacityTo:",param:.9},{title:"80%",object:self,selector:"changeOpacityTo:",param:.8},{title:"70%",object:self,selector:"changeOpacityTo:",param:.7},{title:"60%",object:self,selector:"changeOpacityTo:",param:.6},{title:"50%",object:self,selector:"changeOpacityTo:",param:.5}];self.view.popoverController=subscriptionUtils.getPopoverAndPresent(e,t,100)},changeOpacityTo:function(e){self.view.layer.opacity=e},closeButtonTapped:function(){self.hide(subscriptionUtils.addonBar.frame)},refreshButtonTapped:async function(e){e.clickDate&&Date.now()-e.clickDate<500?(self.webview.loadFileURLAllowingReadAccessToURL(NSURL.fileURLWithPath(subscriptionUtils.mainPath+"/sidebar.html"),NSURL.fileURLWithPath(subscriptionUtils.mainPath+"/")),MNUtil.delay(.5).then(()=>{self.refreshSidebar(!1)})):(self.refreshSidebar(),e.clickDate=Date.now())},onMoveGesture:function(e){var t=e.locationInView(self.appInstance.studyController(self.view.window).view),i=(100<Date.now()-self.moveDate&&(s=e.translationInView(self.appInstance.studyController(self.view.window).view),i=e.locationInView(self.view),1===e.state)&&(e.locationToBrowser={x:i.x-s.x,y:i.y-s.y}),self.moveDate=Date.now(),{x:t.x-e.locationToBrowser.x,y:t.y-e.locationToBrowser.y}),s=self.view.frame,t=(self.view.bounds,self.appInstance.studyController(self.view.window).view.bounds);let o=i.y;(o=o<=0?0:o)>=t.height-15&&(o=t.height-15);e=i.x;self.custom?(self.customMode="None",self.view.frame={x:e,y:o,width:self.lastFrame.width,height:self.lastFrame.height}):self.view.frame={x:e,y:o,width:s.width,height:s.height},self.currentFrame=self.view.frame,self.custom=!1},onResizeGesture0:function(e){self.custom=!1,self.customMode="none";var t=e.view.frame,i=e.locationInView(self.view),s=self.view.frame;let o=i.x+.5*t.width;i=self.view.frame.height;o<=270&&(o=270),self.view.frame={x:s.x,y:s.y,width:o,height:i},self.currentFrame=self.view.frame,350<o?(self.webview.frame=MNUtil.genFrame(0,30,300,i-30),self.docview.frame=MNUtil.genFrame(305,30,o-305,i-30),self.docview.hidden=!1):(self.webview.frame=MNUtil.genFrame(0,30,o,i-30),self.docview.hidden=!0),3===e.state&&MNUtil.studyView.bringSubviewToFront(self.view)},onResizeGesture:function(e){self.custom=!1,self.dynamic=!1;var t=e.view.frame,e=e.locationInView(e.view),i=self.view.frame;let s=e.x+t.x+.3*t.width,o=e.y+t.y+.3*t.height;s<=270&&(s=270),o<=290&&(o=290),self.view.frame={x:i.x,y:i.y,width:s,height:o},350<s?(self.webview.frame=MNUtil.genFrame(0,30,270,o-30),self.docview.frame=MNUtil.genFrame(275,30,s-275,o-30),self.docview.hidden=!1):(self.webview.frame=MNUtil.genFrame(0,30,s,o-30),self.docview.hidden=!0),self.currentFrame=self.view.frame}});function tryCatch(t){return function(...e){try{return t(...e)}catch(e){return MNUtil.showHUD(e),null}}}subscriptionController.prototype.setButtonLayout=function(e,t){e.autoresizingMask=9,e.setTitleColorForState(UIColor.whiteColor(),0),e.setTitleColorForState(this.highlightColor,1),e.backgroundColor=UIColor.colorWithHexString("#9bb2d6").colorWithAlphaComponent(.8),e.layer.cornerRadius=10,e.layer.masksToBounds=!0,t&&e.addTargetActionForControlEvents(this,t,64),this.view.addSubview(e)},subscriptionController.prototype.setColorButtonLayout=function(e,t,i){e.autoresizingMask=9,e.setTitleColorForState(UIColor.blackColor(),0),e.setTitleColorForState(this.highlightColor,1),e.backgroundColor=UIColor.colorWithHexString(i).colorWithAlphaComponent(.8),e.layer.cornerRadius=10,e.layer.masksToBounds=!0,t&&e.addTargetActionForControlEvents(this,t,64),this.view.addSubview(e)},subscriptionController.prototype.show=function(e){this.view.frame;let t=this.view.layer.opacity;"marginnote3"===subscriptionUtils.version.version?this.view.hidden=!1:(this.view.layer.opacity=.2,this.view.hidden=!1,this.moveButton.hidden=!0,this.closeButton.hidden=!0,this.activationStatus.hidden=!0,this.freeUsage.hidden=!0,this.autoSubscription.hidden=!0,this.usageButton.hidden=!0,this.apikeyInput.hidden=!0,this.pasteKeyButton.hidden=!0,this.refreshButton.hidden=!0,subscriptionUtils.studyView().bringSubviewToFront(this.view),this.activationStatus.setTitleForState(subscriptionConfig.getStatus(),0),this.freeUsage.setTitleForState(subscriptionConfig.getFreeUsage(),0),UIView.animateWithDurationAnimationsCompletion(.2,()=>{this.view.layer.opacity=t},()=>{this.view.layer.borderWidth=0,this.moveButton.hidden=!1,this.closeButton.hidden=!1,this.activationStatus.hidden=!1,this.freeUsage.hidden=!1,this.autoSubscription.hidden=!1,this.pasteKeyButton.hidden=!1,this.apikeyInput.hidden=!1,this.usageButton.hidden=!1,this.refreshButton.hidden=!1,this.refreshLayout()}))},subscriptionController.prototype.hide=function(e){let t=this.view.layer.opacity;"marginnote3"===subscriptionUtils.version.version?this.view.hidden=!0:(this.moveButton.hidden=!0,this.closeButton.hidden=!0,this.activationStatus.hidden=!0,this.freeUsage.hidden=!0,this.autoSubscription.hidden=!0,this.pasteKeyButton.hidden=!0,this.usageButton.hidden=!0,this.apikeyInput.hidden=!0,this.refreshButton.hidden=!0,UIView.animateWithDurationAnimationsCompletion(.25,()=>{this.view.layer.opacity=.2},()=>{this.view.hidden=!0,this.view.layer.opacity=t}))},subscriptionController.prototype.creatTextView=function(e="view",t="#c0bfbf",i=.9){var s=UITextView.new();return s.font=UIFont.systemFontOfSize(15),s.layer.cornerRadius=8,s.backgroundColor=subscriptionUtils.hexColorAlpha(t,i),s.textColor=UIColor.blackColor(),s.bounces=!0,this[e].addSubview(s),s},subscriptionController.prototype.refreshLayout=function(){this.freeUsage.setTitleForState(subscriptionConfig.getFreeUsage(),0)},subscriptionController.prototype.runJavaScript=async function(i){return new Promise((t,e)=>{try{this.webview.evaluateJavaScript(i,e=>{t(e)})}catch(e){MNUtil.showHUD(e),t(0)}})},subscriptionController.prototype.refreshSidebar=async function(e=!0){let t,i=(e?(MNUtil.showHUD("Retrieving info..."),t=await subscriptionNetwork.readFileFromWebdav("mnaddon.json"),subscriptionConfig.mnaddon=t):t=subscriptionConfig.mnaddon,subscriptionUtils.getLocalMNAddonVersions()),s=[],o=[],n=[];t=t.map(e=>{var t=e.id;if(t in i)switch(subscriptionUtils.compareVersions(e.version,i[t])){case 0:e.action="reinstall",o.push(e);break;case 1:e.action="update",s.push(e);break;case-1:e.action="reinstall",o.push(e)}else n.push(e);return e});e=s.concat(o).concat(n);this.runJavaScript(`updateFromNative(\`${encodeURIComponent(JSON.stringify(e))}\`)`)};class subscriptionUtils{constructor(e){this.name=e}static subscriptionController;static mainPath;static init(e){this.app=Application.sharedInstance(),this.data=Database.sharedInstance(),this.focusWindow=this.app.focusWindow,this.version=this.appVersion(),this.mainPath=e,this.extensionPath=e.replace(/\/marginnote\.extension\.\w+/,""),NSFileManager.defaultManager().createDirectoryAtPathAttributes(e+"/temp",void 0)}static showHUD(e,t=0){this.app.showHUD(e,this.focusWindow,2)}static appVersion(){var e={},t=parseFloat(this.app.appVersion);switch(e.version=4<=t?"marginnote4":"marginnote3",this.app.osType){case 0:e.type="iPadOS";break;case 1:e.type="iPhoneOS";break;case 2:e.type="macOS"}return e}static getByDefault(e,t){var i=NSUserDefaults.standardUserDefaults().objectForKey(e);return void 0===i?(NSUserDefaults.standardUserDefaults().setObjectForKey(t,e),t):i}static getNoteColors(){return["#ffffb4","#ccfdc4","#b4d1fb","#f3aebe","#ffff54","#75fb4c","#55bbf9","#ea3323","#ef8733","#377e47","#173dac","#be3223","#ffffff","#dadada","#b4b4b4","#bd9fdc"]}static getNoteById(e){return this.data.getNoteById(e)}static getNoteBookById(e){return this.data.getNotebookById(e)}static getUrlByNoteId(e){return this.appVersion().version+"app://note/"+e}static getNoteIdByURL(e){let t=e.trim();return t=/^marginnote\dapp:\/\/note\//.test(t)?t.slice(22):t}static clipboardText(){return UIPasteboard.generalPasteboard().string}static copy(e){UIPasteboard.generalPasteboard().string=e}static copyJSON(e){UIPasteboard.generalPasteboard().string=JSON.stringify(e,null,2)}static copyImage(e){UIPasteboard.generalPasteboard().setDataForPasteboardType(e,"public.png")}static studyController(){return this.app.studyController(this.focusWindow)}static studyView(){return this.app.studyController(this.focusWindow).view}static currentDocController(){return this.studyController().readerController.currentDocumentController}static currentNotebook(){var e=this.studyController().notebookController.notebookId;return this.getNoteBookById(e)}static undoGrouping(e,t){UndoManager.sharedInstance().undoGrouping(String(Date.now()),e,t),this.app.refreshAfterDBChanged(e)}static checkSubscriptionController(){var e=this.studyView();this.subscriptionController||(this.subscriptionController=subscriptionController.new()),this.subscriptionController.view.isDescendantOfView(e)||e.addSubview(this.subscriptionController.view)}static getImage(e,t=2){return UIImage.imageWithDataScale(NSData.dataWithContentsOfFile(e),t)}static refreshAddonCommands(){this.studyController().refreshAddonCommands()}static addObserver(e,t,i){NSNotificationCenter.defaultCenter().addObserverSelectorName(e,t,i)}static removeObserver(e,t){NSNotificationCenter.defaultCenter().removeObserverName(e,t)}static checkSender(e,t){return this.app.checkNotifySenderInWindow(e,t)}static getPopoverAndPresent(e,t,i=100,s=2){var o=MenuController.new(),t=(o.commandTable=t,o.rowHeight=35,o.preferredContentSize={width:i,height:o.rowHeight*o.commandTable.length},new UIPopoverController(o)),i=e.convertRectToView(e.bounds,this.studyView());return t.presentPopoverFromRect(i,this.studyView(),s,!0),t}static hexColorAlpha(e,t){e=UIColor.colorWithHexString(e);return void 0!==t?e.colorWithAlphaComponent(t):e}static getToday(){return(new Date).getDate()}static ensureView(e){MNUtil.isDescendantOfStudyView(e)||(e.hidden=!0,MNUtil.studyView.addSubview(e))}static async delay(i){return new Promise((e,t)=>{NSTimer.scheduledTimerWithTimeInterval(i,!1,function(){e()})})}static getLocalMNAddonVersions(){try{var t=this.extensionPath+"/";let e=NSFileManager.defaultManager().contentsOfDirectoryAtPath(t),i=(e=e.filter(e=>!/\.DS_Store$/.test(e)),{});return e.map(e=>{var t=MNUtil.readJSON(this.extensionPath+"/"+e+"/mnaddon.json").version,e=e.match(/(?<=marginnote\.extension\.).*/)[0];i[e]=t}),i}catch(e){MNUtil.showHUD(e)}}static compareVersions(e,t){var i=e=>{return e.match(/(\d+)([a-zA-Z]*)(\d*)/g).map(e=>{var t=e.match(/\d+/),e=e.match(/[a-zA-Z]+/);return{num:t?parseInt(t[0],10):0,alpha:e?e[0]:"",alphaNum:e?e[0].charCodeAt(0):0}})},s=i(e),o=i(t);for(let e=0;e<Math.max(s.length,o.length);e++){var n=s[e]||{num:0,alpha:"",alphaNum:0},r=o[e]||{num:0,alpha:"",alphaNum:0};if(n.num!==r.num)return n.num>r.num?1:-1;if(n.alphaNum!==r.alphaNum)return n.alphaNum>r.alphaNum?1:-1;if(n.alpha===r.alpha&&n.num===r.num){n=n.num,r=r.num;if(n!==r)return r<n?1:-1}}return 0}static getRandomAuthorization(e){e="https://dav.jianguoyun.com/dav/mnaddonStore/"+e,e=[{user:"2063617827@qq.com",password:"a3dkxi2c72hgm8hh",url:e},{user:"1514501767@qq.com",password:"a76xnbehrsr36via",url:e}];return 1===e.length?e[0]:e.length?e[Math.floor(Math.random()*e.length)]:""}}class subscriptionNetwork{constructor(e){this.name=e}static onSubscrbing=!1;static genNSURL(e){return NSURL.URLWithString(e)}static initRequest(e,t){var i=NSMutableURLRequest.requestWithURL(this.genNSURL(e));i.setHTTPMethod(t.method??"GET"),i.setTimeoutInterval(t.timeout??10);return i.setAllHTTPHeaderFields({"User-Agent":"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1.1 Safari/605.1.15","Content-Type":"application/json",Accept:"application/json",...t.headers??{}}),t.search?i.setURL(this.genNSURL(e.trim()+"?"+Object.entries(t.search).reduce((e,t)=>{var[t,i]=t;return(e?e+"&":"")+t+"="+encodeURIComponent(i)},""))):t.body?i.setHTTPBody(NSData.dataWithStringEncoding(t.body,4)):t.form?i.setHTTPBody(NSData.dataWithStringEncoding(Object.entries(t.form).reduce((e,t)=>{var[t,i]=t;return(e?e+"&":"")+t+"="+encodeURIComponent(i)},""),4)):t.json&&i.setHTTPBody(NSJSONSerialization.dataWithJSONObjectOptions(t.json,1)),i}static async sendRequest(t){const i=NSOperationQueue.mainQueue();return new Promise((s,e)=>{NSURLConnection.sendAsynchronousRequestQueueCompletionHandler(t,i,(e,t,i)=>{t=NSJSONSerialization.JSONObjectWithDataOptions(t,1);NSJSONSerialization.isValidJSONObject(t)&&(i.localizedDescription&&(t.success=!1,subscriptionUtils.showHUD(i.localizedDescription)),s(t)),s(t)})})}static async fetch(e,t={}){e=this.initRequest(e,t);return await this.sendRequest(e)}static async subscribe(e="mnaddon"){this.onSubscrbing=!0;var t={"Content-Type":"application/json",Authorization:"Bearer "+subscriptionConfig.config.apikey},i={model:e,messages:[{role:"user",content:"mnaddon"}]},s=subscriptionConfig.getConfig("url")+"/v1/chat/completions",s=await this.fetch(s,{method:"POST",headers:t,timeout:60,json:i});if(s.success)subscriptionConfig.isSubscribed()?(subscriptionConfig.config.subscriptionDaysRemain=subscriptionConfig.getConfig("subscriptionDaysRemain")+1,subscriptionUtils.showHUD("Subscription days remian: "+subscriptionConfig.config.subscriptionDaysRemain)):(subscriptionConfig.config.activated=!0,subscriptionConfig.config.subscribedDay=subscriptionUtils.getToday(),subscriptionUtils.showHUD("subscribe success: "+e));else{let e=!1;subscriptionConfig.config.autoSubscription=!1,s.error&&(s.error.message?(subscriptionUtils.showHUD("Error: "+s.error.message),s.error.message.includes("该令牌额度已用尽")&&(e=!0)):(subscriptionUtils.showHUD("error: "+JSON.stringify(s.error)),subscriptionUtils.copyJSON(s.error))),subscriptionConfig.config.activated&&e||(subscriptionConfig.config.activated=!1)}return this.onSubscrbing=!1,MNUtil.delay(.1).then(()=>{subscriptionConfig.save(),subscriptionUtils.subscriptionController.activationStatus.setTitleForState(subscriptionConfig.getStatus(),0),subscriptionUtils.refreshAddonCommands()}),s}static async getKey(e="mnaddon"){var t,i=subscriptionConfig.getConfig("apikey");if(""!==i.trim())return i={"Content-Type":"application/json",Authorization:"Bearer "+i},e={model:e,messages:[{role:"user",content:"mnaddon"}]},t=subscriptionConfig.getConfig("url")+"/v1/chat/completions",await this.fetch(t,{method:"POST",headers:i,timeout:60,json:e});subscriptionUtils.showHUD("no api key")}static async getUsage(){var e,t=subscriptionConfig.getConfig("url"),i=t+"/v1/dashboard/billing/subscription",t=t+"/v1/dashboard/billing/usage",s=subscriptionConfig.getConfig("apikey");if(""!==s.trim())return e={},"error"in(s=await this.fetch(t,{method:"GET",timeout:60,headers:t={Authorization:"Bearer "+s,"Content-Type":"application/json"}}))&&s.error.message.includes("该令牌额度已用尽")?e.error="该令牌额度已用尽":(e.usage=s.total_usage,s=await this.fetch(i,{method:"GET",timeout:60,headers:t}),e.total=s.hard_limit_usd),e;subscriptionUtils.showHUD("no api key")}static btoa(e){e=CryptoJS.enc.Utf8.parse(e);return CryptoJS.enc.Base64.stringify(e)}static async readWebDAVFile(e,t,i){t={Authorization:"Basic "+this.btoa(t+":"+i),"Cache-Control":"no-cache"},i=await MNConnection.fetch(e,{method:"GET",headers:t});try{return i.base64Encoding?MNUtil.data2string(i):i}catch(e){return i}}static async readFileFromWebdav(e){e=subscriptionUtils.getRandomAuthorization(e);return await this.readWebDAVFile(e.url,e.user,e.password)}static async downloadFromConfig(e){var t=subscriptionUtils.extensionPath+"/marginnote.extension."+e.id,i=e.id+"_v"+e.version.replace(/\./g,"_")+".mnaddon",s=subscriptionUtils.mainPath+"/"+i;e.customUrl?(MNUtil.showHUD("Download: "+e.name),"object"==typeof(e=await MNConnection.fetch(e.url+"?timestamp="+Date.now()))&&"statusCode"in e?404===e.statusCode?MNUtil.showHUD("statusCode: 404 | File not found!"):MNUtil.showHUD("statusCode: "+e.statusCode):(e.writeToFileAtomically(s,!1),ZipArchive.unzipFileAtPathToDestination(s,t),MNUtil.showHUD("Install success! Please restart MN manually"))):(MNUtil.showHUD("Download: "+i),(await subscriptionNetwork.readFileFromWebdav(i)).writeToFileAtomically(s,!1),ZipArchive.unzipFileAtPathToDestination(s,t),MNUtil.showHUD("Install success! Please restart MN manually"))}}class subscriptionConfig{constructor(e){this.name=e}static defaultConfig={activated:!1,autoSubscription:!1,subscribedDay:0,apikey:"",freeUsage:0,freeDay:0,subscriptionDaysRemain:0,url:"https://api.feliks.top",lastView:"subscriptionView"};static mnaddon=[];static init(){this.config=this.getByDefault("FeliksPro",this.defaultConfig)}static getByDefault(e,t){var i=NSUserDefaults.standardUserDefaults().objectForKey(e);return void 0===i?(NSUserDefaults.standardUserDefaults().setObjectForKey(t,e),t):i}static getConfig(e){return(void 0!==this.config[e]?this.config:this.defaultConfig)[e]}static isSubscribed(){var e;return!!this.getConfig("activated")&&(e=subscriptionUtils.getToday(),this.getConfig("subscribedDay")===e)}static getFreeUsage(){var e=subscriptionUtils.getToday();return this.getConfig("freeDay")===e?["🔟","9️⃣","8️⃣","7️⃣","6️⃣","5️⃣","4️⃣","3️⃣","2️⃣","1️⃣","0️⃣"][this.getConfig("freeUsage")]||"0️⃣":(this.config.freeDay=e,this.config.freeUsage=0,"🔟")}static isFree(e=!0){var t,i=subscriptionUtils.getToday();return this.getConfig("freeDay")===i?(t=this.getConfig("freeUsage"),e?(this.config.freeUsage=t+1,subscriptionUtils.showHUD("Free Usage remian: "+(9-t)),t<=10):t<=9):(this.config.freeDay=i,e?(this.config.freeUsage=1,subscriptionUtils.showHUD("Free Usage remian: "+(10-this.config.freeUsage))):this.config.freeUsage=0,!0)}static checkSubscribed(e=!0,t=!1,i=!0){if(!this.getConfig("activated"))return!t&&this.isFree(e)?(MNUtil.delay(.1).then(()=>{subscriptionUtils.subscriptionController&&subscriptionUtils.subscriptionController.freeUsage.setTitleForState(this.getFreeUsage(),0),this.save()}),!0):(i&&MNUtil.showHUD("Subscription Not activated!"),!1);if(this.isSubscribed())return!0;if(this.getConfig("autoSubscription")){if(this.config.subscriptionDaysRemain)return this.config.activated=!0,this.config.subscribedDay=subscriptionUtils.getToday(),this.config.subscriptionDaysRemain=this.config.subscriptionDaysRemain-1,MNUtil.delay(.1).then(()=>{subscriptionUtils.subscriptionController&&subscriptionUtils.subscriptionController.activationStatus&&subscriptionUtils.subscriptionController.activationStatus.setTitleForState(this.getStatus(),0),subscriptionUtils.showHUD("Subscription days remian: "+this.config.subscriptionDaysRemain),subscriptionUtils.refreshAddonCommands(),this.save()}),!0;subscriptionNetwork.onSubscrbing||subscriptionNetwork.subscribe().then(e=>{subscriptionUtils.refreshAddonCommands()})}return!t&&this.isFree(e)?(MNUtil.delay(.1).then(()=>{subscriptionUtils.subscriptionController&&subscriptionUtils.subscriptionController.freeUsage.setTitleForState(this.getFreeUsage(),0),this.save()}),!0):(i&&subscriptionUtils.showHUD("Not subscribed today!"),!1)}static getStatus(){return"Activated: "+(this.getConfig("activated")?"✅":"❌")+" | "+("Subscribed: "+(this.isSubscribed()?"✅":"❌"))+" | "+this.getConfig("subscriptionDaysRemain")}static save(){NSUserDefaults.standardUserDefaults().setObjectForKey(this.config,"FeliksPro")}static remove(){NSUserDefaults.standardUserDefaults().removeObjectForKey("FeliksPro")}static getConfig(e){return(void 0!==this.config[e]?this.config:this.defaultConfig)[e]}static autoSubscribe(e=!0){this.getConfig("autoSubscription")?this.getConfig("activated")?this.isSubscribed()?subscriptionUtils.refreshAddonCommands():this.config.subscriptionDaysRemain?(this.config.activated=!0,this.config.subscribedDay=subscriptionUtils.getToday(),this.config.subscriptionDaysRemain=this.config.subscriptionDaysRemain-1,subscriptionUtils.subscriptionController.activationStatus&&subscriptionUtils.subscriptionController.activationStatus.setTitleForState(this.getStatus(),0),subscriptionUtils.showHUD("Subscription days remian: "+this.config.subscriptionDaysRemain),subscriptionUtils.refreshAddonCommands(),this.save()):subscriptionNetwork.onSubscrbing?subscriptionUtils.refreshAddonCommands():subscriptionNetwork.subscribe().then(e=>{subscriptionUtils.refreshAddonCommands()}):(e&&subscriptionUtils.showHUD("Not activated!"),subscriptionConfig.config.autoSubscription=!1,subscriptionUtils.refreshAddonCommands()):subscriptionUtils.refreshAddonCommands()}}