{
  "currentState": "memory_saved",
  "stateHistory": [
    {
      "from": "initial",
      "command": "init",
      "timestamp": "2025-07-05T15:54:09.194Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "remember",
      "timestamp": "2025-07-05T16:31:21.771Z",
      "args": [
        "MN-Addon 开发陷阱：变量重复声明导致的静默加载失败\n\n问题描述：\n- 插件突然无法找到某个类（如 MNTaskManager），报错 \"Can't find variable: ClassName\"\n- 没有任何语法错误提示，文件似乎没有被成功加载\n\n根本原因：\nJavaScript 文件中存在语法错误（如在同一作用域内重复声明 const 变量），但被文件末尾的 try-catch 静默处理了。\n\n真实案例：\n在 xdyy_utils_extensions.js 的 linkParentTask 方法中，第786行和第836行重复声明了 const parentParts 变量，导致语法错误。\n\n为什么难以发现：\n文件末尾的初始化代码静默处理了所有错误：\n```javascript\n} catch (error) {\n  // 静默处理错误 - 这导致问题难以发现！\n}\n```\n\n诊断方法：\n1. 使用 node -c filename.js 检查语法错误\n2. 查看 git diff 重点检查变量声明\n3. 搜索变量名检查是否重复声明\n\n解决方案：\n1. 修复语法错误（删除重复声明或重命名）\n2. 改进错误处理，在 catch 块中添加日志\n3. 开发时启用语法检查，提交前验证\n4. 使用 ESLint 配置 no-redeclare 规则\n\n经验总结：\n- 当类突然\"消失\"时，首先怀疑文件加载失败\n- 文件加载失败通常是因为语法错误\n- 静默的 try-catch 是调试的大敌\n- 始终使用工具验证语法正确性",
        "--tags",
        "MN-Addon JavaScript 语法错误 调试技巧 MarginNote插件"
      ]
    },
    {
      "from": "memory_saved",
      "command": "init",
      "timestamp": "2025-07-05T17:10:58.723Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntoolbar/mntoolbar"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-05T17:19:30.147Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntoolbar/mntoolbar"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-08T16:02:11.397Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mnutils"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-09T16:08:57.104Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-10T03:30:21.333Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-10T04:40:35.758Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "remember",
      "timestamp": "2025-07-10T17:22:23.364Z",
      "args": [
        "## MNToolbar 按钮开发陷阱总结\n\n### 1. MNNote.appendMarkdownComment 空内容检查\n- 问题：MNNote 包装器会检查 `comment && comment.trim()`，空内容直接返回\n- 解决：使用原生 API `focusNote.note.appendMarkdownComment()` 绕过检查\n\n### 2. 空输入值的不同表现\n- 手动输入空框：`alert.textFieldAtIndex(0).text` 返回 `undefined`\n- 代码传入空字符串：`\"\"` 或 `\" \"` 都会被 trim 掉\n- 关键：理解 undefined、null、空字符串的差异\n\n### 3. MNToolbar 按钮键名必须使用 custom+数字格式\n- 错误：使用 `registerButton(\"proof\", ...)` 导致单击无反应\n- 正确：必须使用 `registerButton(\"custom8\", ...)` 格式\n- 原因：按钮系统只识别 custom 格式的键名\n- 症状：长按菜单正常但单击失效\n\n### 4. 调试策略\n- API 层级：区分包装器和原生 API\n- 框架约定：注意隐含的命名规则\n- 底层方案：高层 API 受限时使用底层 API",
        "--tags",
        "MN-Addon MNToolbar 开发陷阱 按钮开发"
      ]
    },
    {
      "from": "memory_saved",
      "command": "init",
      "timestamp": "2025-07-10T17:39:00.693Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-10T17:54:22.684Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-10T18:16:49.547Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mnutils"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-10T18:40:34.002Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-11T03:35:01.342Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-11T03:41:48.763Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-11T04:13:25.801Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-07-11T06:04:56.269Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon/mntask"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "remember",
      "timestamp": "2025-07-11T11:52:54.452Z",
      "args": [
        "## MN-Addon 开发陷阱：不存在的 API 方法（getHTMLCommentFieldText）\n\n### 问题描述\n在开发 MNTask 今日看板刷新功能时，`sortTodayTasks` 方法中使用了 `task.getHTMLCommentFieldText(\"排序\")`，但这个方法在 MNNote 对象上并不存在，导致：\n- 排序功能执行失败\n- 整个今日看板刷新流程中断\n- 看板只显示标题，没有任务内容\n\n### 根本原因\n1. 文档与实现不同步：可能是旧版本的 API 或计划中的功能\n2. 复制代码未验证：从其他项目复制代码时没有验证 API 是否存在\n3. 缺少运行时检查：没有在使用前检查方法是否存在\n\n### 解决方案\n最终采用简化实现：直接使用 TaskFilterEngine.sort 进行智能排序，避免依赖不存在的 API。\n\n### 经验教训\n1. 当遇到\"函数不存在\"错误时，首先确认该 API 是否真的存在\n2. 不要假设所有看起来合理的方法都已实现\n3. 简单的解决方案往往比复杂的更可靠\n4. 查阅源码而非文档：直接在 mnutils.js 和 xdyyutils.js 中搜索方法\n5. 添加防御性编程：对不确定的 API 添加 typeof 检查或 try-catch",
        "--tags",
        "MN-Addon API陷阱 调试技巧 MarginNote插件 MNTask"
      ]
    }
  ],
  "lastUpdated": "2025-07-11T11:52:54.480Z"
}
