{
  "currentState": "initialized",
  "stateHistory": [
    {
      "from": "initial",
      "command": "init",
      "timestamp": "2025-06-28T12:03:19.937Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "remember",
      "timestamp": "2025-06-28T12:35:43.405Z",
      "args": [
        "## MarginNote 插件开发踩坑记录 (MNTask 2025-06-28)\n\n### 1. MarginNote 完全卡死问题\n- 原因：JSB.newAddon 缺少 mainPath 参数；使用 new TaskController() 而非 TaskController.new()；模块加载循环依赖\n- 解决：必须接收 mainPath；使用 .new() 创建 JSB 对象；延迟加载依赖模块\n\n### 2. 插件不在插件栏显示  \n- 原因：缺少 queryAddonCommandStatus 方法；缺少静态方法对象；图标尺寸错误\n- 解决：实现 queryAddonCommandStatus 返回图标配置；JSB.defineClass 需要两个参数（实例+静态）；logo.png 必须是 44x44\n\n### 3. toggleAddon 无响应\n- 原因：JavaScript 作用域问题；self 未定义\n- 解决：在文件顶部定义 var self = null；在 sceneWillConnect 中设置 self = this\n\n### 4. 其他重要经验\n- UIAlertView 不可靠，使用 MNUtil.input\n- 始终检查 typeof MNUtil !== \"undefined\"\n- 使用 UIWebView 而非 WKWebView\n- 每个危险操作都要 try-catch\n- 参考 mntoolbar 和 mnutils 的实现模式\n\n### 开发检查清单\n✓ JSB.newAddon(mainPath)\n✓ queryAddonCommandStatus 方法\n✓ JSB.defineClass 两个参数\n✓ sceneWillConnect 中 self = this\n✓ MNUtil 存在性检查\n✓ 使用 .new() 创建对象\n✓ logo.png 44x44 像素",
        "--tags",
        "marginnote plugin development mntask troubleshooting jsb"
      ]
    },
    {
      "from": "memory_saved",
      "command": "recall",
      "timestamp": "2025-06-28T12:37:18.579Z",
      "args": []
    },
    {
      "from": "recall-waiting",
      "command": "remember",
      "timestamp": "2025-06-28T12:59:27.730Z",
      "args": [
        "## MarginNote 插件闪退问题终极解决方案 (MNTask 2025-06-28)\n\n### 问题：安装插件后 MarginNote4 完全闪退，重启仍然闪退\n\n### 根本原因：\n1. **模块加载时机错误** - 在 JSB.newAddon 函数内部加载模块会导致闪退\n2. **ES6 语法兼容性** - 虽然 MNUtils 使用了 class，但在插件初始化阶段使用可能有问题\n\n### 解决方案：\n\n1. **将模块加载移到文件末尾**（最关键）：\n```javascript\n// ❌ 错误 - 在 JSB.newAddon 内部加载\nJSB.newAddon = function(mainPath) {\n  JSB.require('taskModel');  // 导致闪退！\n  // ...\n}\n\n// ✅ 正确 - 在文件末尾加载\nJSB.newAddon = function(mainPath) {\n  // 只定义类，不加载模块\n  return MNTaskMain;\n};\n\n// 文件末尾\nJSB.require('mnutils');\nJSB.require('taskModel');\nJSB.require('taskController');\n```\n\n2. **ES6 class 改为传统函数式**：\n```javascript\n// ❌ 可能有问题\nclass TaskModel { }\n\n// ✅ 更安全\nfunction TaskModel() { }\nTaskModel.prototype.method = function() { }\n```\n\n3. **移除危险的父类调用**：\n```javascript\n// ❌ 错误\nself.super.init();\n\n// ✅ 直接初始化\n// 不调用父类\n```\n\n### 调试技巧：\n- 使用 Console.app 查看崩溃日志\n- 逐步排除法：先创建最简单的插件，逐步添加功能\n- 对比成功运行的插件（如 MNToolbar）的结构\n\n### 关键经验：\n- MarginNote 的 JSB 环境在不同阶段对 JS 特性的支持不同\n- 模块加载顺序极其重要，必须在文件末尾加载\n- 参考成功插件的模式，不要创新",
        "--tags",
        "marginnote plugin crash mntask troubleshooting jsb module-loading"
      ]
    },
    {
      "from": "memory_saved",
      "command": "remember",
      "timestamp": "2025-06-28T13:06:21.873Z",
      "args": [
        "## MarginNote 插件闪退问题深度分析 (2025-06-28)\n\n### 问题类型：应用闪退 vs 应用卡死\n- **闪退**：MarginNote 直接崩溃退出，重启仍然闪退（本次遇到的问题）\n- **卡死**：MarginNote 无响应但不退出，需要强制退出\n\n### 闪退根本原因：模块加载时机错误 🚨\n\n**最关键发现**：MarginNote 的 JSB 环境对模块加载时机极其敏感！\n\n```javascript\n// ❌ 致命错误 - 在 JSB.newAddon 内部加载模块\nJSB.newAddon = function(mainPath) {\n  JSB.require('taskModel');     // 💥 导致闪退！\n  JSB.require('taskController'); // 💥 导致闪退！\n  \n  var Plugin = JSB.defineClass(...);\n  return Plugin;\n};\n\n// ✅ 正确做法 - 文件末尾加载\nJSB.newAddon = function(mainPath) {\n  var Plugin = JSB.defineClass(...);\n  return Plugin;  // 只返回类定义\n};\n\n// 所有模块加载必须在文件末尾\nJSB.require('mnutils');\nJSB.require('taskModel');\nJSB.require('taskController');\n```\n\n### 为什么会闪退？\n1. JSB.newAddon 在插件初始化的早期阶段执行\n2. 此时 JSB 环境可能还未完全准备好\n3. 加载包含特定语法的模块会触发崩溃\n4. 成功运行的插件（MNToolbar、MNUtils）都在文件末尾加载模块\n\n### 其他导致闪退的因素\n1. **ES6 语法**：虽然 MNUtils 使用 class，但在插件初始化阶段使用可能导致闪退\n2. **父类调用**：错误的 super.init() 调用\n3. **循环依赖**：模块间的循环引用\n\n### 调试闪退的方法\n1. 使用 Console.app 查看崩溃日志\n2. 搜索 \"marginnote\" 相关条目\n3. 逐步排除法：从最简单的插件开始，逐步添加功能\n4. 对比成功插件的代码结构\n\n### 预防闪退的最佳实践\n1. **严格遵守模块加载规则**：所有 JSB.require 必须在文件末尾\n2. **JSB.newAddon 保持纯净**：只定义和返回类，不执行任何其他操作\n3. **避免高级语法**：在插件初始化阶段使用传统语法\n4. **参考成功案例**：以 MNToolbar 为模板进行开发\n\n### 闪退 vs 卡死的区别处理\n- 闪退：检查模块加载时机、语法兼容性\n- 卡死：检查死循环、无限递归、同步阻塞操作",
        "--tags",
        "marginnote plugin crash debugging jsb module-loading best-practices"
      ]
    },
    {
      "from": "memory_saved",
      "command": "recall",
      "timestamp": "2025-06-28T13:07:03.740Z",
      "args": []
    },
    {
      "from": "recall-waiting",
      "command": "init",
      "timestamp": "2025-06-28T13:49:21.530Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-06-28T14:37:33.903Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-06-28T15:14:04.647Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon"
        }
      ]
    },
    {
      "from": "initialized",
      "command": "init",
      "timestamp": "2025-06-28T15:27:44.964Z",
      "args": [
        {
          "workingDirectory": "/Users/xiakangwei/Nutstore/Github/repository/MN-addon-develop/MN-Addon"
        }
      ]
    }
  ],
  "lastUpdated": "2025-06-28T15:27:44.988Z"
}
